name: Build tihc (macOS, Windows & Linux)

on:
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get tihc version
        id: get_version
        run: |
          cat cli/Cargo.toml | grep version
          ver=$(grep -E '^version\s*=\s*"' cli/Cargo.toml | head -n1 | sed -E 's/.*"([^"]+)".*/\1/')
          echo "[debug] extracted version: $ver"
          echo "version=$ver" >> $GITHUB_OUTPUT
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - name: Install yarn
        run: npm install -g yarn
      - name: Set yarn registry to taobao
        run: yarn config set registry https://registry.npmmirror.com
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Install Rust target (musl only)
        run: rustup target add x86_64-unknown-linux-musl
      - name: Install musl-tools
        run: sudo apt-get update && sudo apt-get install -y musl-tools
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: plugins/plugin_lossy_ddl/go/go.mod
      - name: Build plugin_lossy_ddl go c-archive (linux)
        run: |
          cd plugins/plugin_lossy_ddl/go
          export CC=musl-gcc
          CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -buildmode=c-archive -o libschematracker.a .
          ls -lh libschematracker.a libschematracker.h || true
  #     - name: Build frontend (dashboard)
  #       run: |
  #         rm -rf frontend/dist
  #         cd frontend
  #         yarn install
  #         yarn build
  #     - name: Build tihc (Linux musl static)
  #       run: |
  #         cargo build --package tihc --release --target x86_64-unknown-linux-musl
  #         mkdir -p bin-musl
  #         cp target/x86_64-unknown-linux-musl/release/tihc bin-musl/
  #     - name: Upload musl static binary artifacts (Linux)
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: tihc-linux-bin-v${{ steps.get_version.outputs.version }}
  #         path: bin-musl
  #     - name: Package binaries (Linux)
  #       run: |
  #         tar -czvf tihc-v${{ steps.get_version.outputs.version }}-linux.tar.gz -C bin-musl .
  #     - name: Generate sha256 checksum (Linux)
  #       run: |
  #         shasum -a 256 tihc-v${{ steps.get_version.outputs.version }}-linux.tar.gz > tihc-v${{ steps.get_version.outputs.version }}-linux.tar.gz.sha256
  #     - name: Upload packaged artifact (Linux)
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: tihc-v${{ steps.get_version.outputs.version }}-linux.tar.gz
  #         path: tihc-v${{ steps.get_version.outputs.version }}-linux.tar.gz
  #     - name: Upload sha256 checksum (Linux)
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: tihc-v${{ steps.get_version.outputs.version }}-linux.sha256
  #         path: tihc-v${{ steps.get_version.outputs.version }}-linux.tar.gz.sha256

  # # build-macos:
  # #   runs-on: macos-latest
  # #   steps:
  # #     - uses: actions/checkout@v4
  # #     - name: Get tihc version
  # #       id: get_version
  # #       run: |
  # #         cat cli/Cargo.toml | grep version
  # #         ver=$(grep -E '^version\s*=\s*"' cli/Cargo.toml | head -n1 | sed -E 's/.*"([^"]+)".*/\1/')
  # #         echo "[debug] extracted version: $ver"
  # #         echo "version=$ver" >> $GITHUB_OUTPUT
  # #     - name: Set up Node.js
  # #       uses: actions/setup-node@v4
  # #       with:
  # #         node-version: 'lts/*'
  # #     - name: Install yarn
  # #       run: npm install -g yarn
  # #     - name: Set yarn registry to taobao
  # #       run: yarn config set registry https://registry.npmmirror.com
  # #     - name: Set up Rust
  # #       uses: actions-rs/toolchain@v1
  # #       with:
  # #         toolchain: stable
  # #         profile: minimal
  # #         override: true
  # #     - name: Install Rust targets (if needed)
  # #       run: rustup target add aarch64-apple-darwin x86_64-apple-darwin
  # #     - name: Set up Go
  # #       uses: actions/setup-go@v5
  # #       with:
  # #         go-version-file: plugins/plugin_lossy_ddl/go/go.mod
  # #     - name: Download Go modules
  # #       run: cd plugins/plugin_lossy_ddl/go && go mod download
  # #     - name: Build all (macOS)
  # #       run: make all
  # #     - name: Upload binary artifacts (macOS)
  # #       uses: actions/upload-artifact@v4
  # #       with:
  # #         name: tihc-macos-bin-v${{ steps.get_version.outputs.version }}
  # #         path: bin/*
  # #     - name: Package binaries (macOS)
  # #       run: |
  # #         tar -czvf tihc-v${{ steps.get_version.outputs.version }}-macos.tar.gz -C bin .
  # #     - name: Generate sha256 checksum (macOS)
  # #       run: |
  # #         shasum -a 256 tihc-v${{ steps.get_version.outputs.version }}-macos.tar.gz > tihc-v${{ steps.get_version.outputs.version }}-macos.tar.gz.sha256
  # #     - name: Upload packaged artifact (macOS)
  # #       uses: actions/upload-artifact@v4
  # #       with:
  # #         name: tihc-v${{ steps.get_version.outputs.version }}-macos.tar.gz
  # #         path: tihc-v${{ steps.get_version.outputs.version }}-macos.tar.gz
  # #     - name: Upload sha256 checksum (macOS)
  # #       uses: actions/upload-artifact@v4
  # #       with:
  # #         name: tihc-v${{ steps.get_version.outputs.version }}-macos.sha256
  # #         path: tihc-v${{ steps.get_version.outputs.version }}-macos.tar.gz.sha256

  # # build-windows:
  # #   runs-on: windows-latest
  # #   steps:
  # #     - uses: actions/checkout@v4
  # #     - name: Get tihc version
  # #       id: get_version
  # #       shell: bash
  # #       run: |
  # #         cat cli/Cargo.toml | grep version
  # #         ver=$(grep -E '^version\s*=\s*"' cli/Cargo.toml | head -n1 | sed -E 's/.*"([^"]+)".*/\1/')
  # #         echo "[debug] extracted version: $ver"
  # #         echo "version=$ver" >> $GITHUB_OUTPUT
  # #     - name: Set up Node.js
  # #       uses: actions/setup-node@v4
  # #       with:
  # #         node-version: 'lts/*'
  # #     - name: Install yarn
  # #       run: npm install -g yarn
  # #     - name: Set yarn registry to taobao
  # #       run: yarn config set registry https://registry.npmmirror.com
  # #     - name: Set up Rust (GNU)
  # #       uses: actions-rs/toolchain@v1
  # #       with:
  # #         toolchain: stable-x86_64-pc-windows-gnu
  # #         profile: minimal
  # #         override: true
  # #     - name: Install Rust targets (if needed)
  # #       run: rustup target add x86_64-pc-windows-gnu
  # #     - name: Set up Go
  # #       uses: actions/setup-go@v5
  # #       with:
  # #         go-version-file: plugins/plugin_lossy_ddl/go/go.mod
  # #     - name: Download Go modules
  # #       run: cd plugins/plugin_lossy_ddl/go && go mod download
  # #     - name: Build all (Windows)
  # #       run: make all
  # #     - name: Upload binary artifacts (Windows)
  # #       uses: actions/upload-artifact@v4
  # #       with:
  # #         name: tihc-windows-bin-v${{ steps.get_version.outputs.version }}
  # #         path: bin/*
  # #     - name: Package binaries (Windows)
  # #       run: |
  # #         powershell Compress-Archive -Path bin\* -DestinationPath tihc-v${{ steps.get_version.outputs.version }}-windows.zip
  # #     - name: Generate sha256 checksum (Windows)
  # #       run: |
  # #         certutil -hashfile tihc-v${{ steps.get_version.outputs.version }}-windows.zip SHA256 > tihc-v${{ steps.get_version.outputs.version }}-windows.zip.sha256
  # #     - name: Upload packaged artifact (Windows)
  # #       uses: actions/upload-artifact@v4
  # #       with:
  # #         name: tihc-v${{ steps.get_version.outputs.version }}-windows.zip
  # #         path: tihc-v${{ steps.get_version.outputs.version }}-windows.zip
  # #     - name: Upload sha256 checksum (Windows)
  # #       uses: actions/upload-artifact@v4
  # #       with:
  # #         name: tihc-v${{ steps.get_version.outputs.version }}-windows.sha256
  # #         path: tihc-v${{ steps.get_version.outputs.version }}-windows.zip.sha256
